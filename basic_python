{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30702,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/haider12/hugo-practice?scriptVersionId=173617273\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"print(\"Hello Hugo\")","metadata":{"execution":{"iopub.status.busy":"2024-04-24T00:02:28.408693Z","iopub.execute_input":"2024-04-24T00:02:28.409804Z","iopub.status.idle":"2024-04-24T00:02:28.461661Z","shell.execute_reply.started":"2024-04-24T00:02:28.409732Z","shell.execute_reply":"2024-04-24T00:02:28.4605Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Hello Hugo\n","output_type":"stream"}]},{"cell_type":"code","source":"print(3+5)","metadata":{"execution":{"iopub.status.busy":"2024-04-24T00:12:39.004917Z","iopub.execute_input":"2024-04-24T00:12:39.005422Z","iopub.status.idle":"2024-04-24T00:12:39.011402Z","shell.execute_reply.started":"2024-04-24T00:12:39.005387Z","shell.execute_reply":"2024-04-24T00:12:39.010084Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"8\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def hello(name):\n    print(f'Hello: {name}')","metadata":{"execution":{"iopub.status.busy":"2024-04-24T00:03:03.085765Z","iopub.execute_input":"2024-04-24T00:03:03.086254Z","iopub.status.idle":"2024-04-24T00:03:03.093039Z","shell.execute_reply.started":"2024-04-24T00:03:03.086212Z","shell.execute_reply":"2024-04-24T00:03:03.091699Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"#Let us now say Hello to Bayley\nname = 'Bayley'\nhello(name)","metadata":{"execution":{"iopub.status.busy":"2024-04-24T00:03:24.085962Z","iopub.execute_input":"2024-04-24T00:03:24.086369Z","iopub.status.idle":"2024-04-24T00:03:24.093334Z","shell.execute_reply.started":"2024-04-24T00:03:24.086338Z","shell.execute_reply":"2024-04-24T00:03:24.092049Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Hello: Bayley\n","output_type":"stream"}]},{"cell_type":"code","source":"#Please write some code to say hello to me : Haider\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Let us take this a step further and say Thank you to someone, complete this code \ndef thank_you(___):\n    print(f'___: {name}')\n    ","metadata":{},"execution_count":null,"outputs":[]}]}